1 Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es una variable y para qu√© sirve?
Es una representaci√≥n de algun lugar de memoria que reservamos para poder guardar algun valor en JS
¬øCu√°l es la diferencia entre declarar e inicializar una variable?
declarar una variable hace que se reserve un lugar en memoria, pero no se le guarda informacion. si la llamamos en este estado JS nos devolvera un undefined 
inicializar una variable se entiende como asignar un valor a la variable declarada.
¬øCu√°l es la diferencia entre sumar n√∫meros y concatenar strings?
sumar numeros matematicamente, concatenar strings es juntar dos cadenas de caracteres para formar una sola cadena.
¬øCu√°l operador me permite sumar o concatenar?
+
2 Determina el nombre y tipo de dato para almacenar en variables la siguiente informaci√≥n:
3 Traduce a c√≥digo JavaScript las variables del ejemplo anterior y deja tu c√≥digo en los comentarios.

let nombre = "Eduardo";
let apellido = "Jami";
let nombreUsuario = "Honguito";
let edad = 25;
let correo = "eduardo-jami@hotmail.com";
let mayorEdad = True;
let dineroAhorrado = 500;
let deudas = 0;

4 Calcula e imprime las siguientes variables a partir de las variables del ejemplo anterior:

Nombre completo (nombre y apellido)
console.log(nombre + " " + apellido);
Dinero real (dinero ahorrado menos deudas)
console.log(dineroAhorrado - deudas);
# Funciones
1 Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es una funci√≥n?
Las funciones son tareas que va a llevar a cabo el navegador
¬øCu√°ndo me sirve usar una funci√≥n en mi c√≥digo?
Cuando vamos a realizar tareas repetitivamente.
¬øCu√°l es la diferencia entre par√°metros y argumentos de una funci√≥n?
los parametros son variables dentro de la funcion, los argumentos son los valores que la funcion recibira para poder ser ejecutada.

2 Convierte el siguiente c√≥digo en una funci√≥n, pero, cambiando cuando sea necesario las variables constantes por par√°metros y argumentos en una funci√≥n:

function presentacion(nombre, apellido, nickname) {
    var completeName = nombre + apellido;
    console.log("Mi nombre es " + completeName + ", pero prefiero que me digas " + nickname + ".");
}

presentacion("Eduardo", "Jami", "Lalo")
# Condicionales
1 Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es una condicional?
Es una condicion que debe ser cumplida para ejecutar un bloque de codigo.
¬øQu√© tipos de condicionales existen en JavaScript y cu√°les son sus diferencias?
existen el tipo if, switch, y ternarios.
el if (su familia es if, else if, y el else) se usa para cuando son pocas condiciones que deseas validar
el switch se usa cuando tengas muchas condiciones por validar
los ternarios son como el if, pero su sintaxis es mas corta.
¬øPuedo combinar funciones y condicionales?
si

2  Replica el comportamiento del siguiente c√≥digo que usa la sentencia switch utilizando if, else y else if:
const tipoDeSuscripcion = "Basic";
if (tipoDeSuscripcion === "Free") {
    console.log("Solo puedes tomar los cursos gratis");
} else if (tipoDeSuscripcion === "Basic") {
    console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
} else if (tipoDeSuscripcion === "Expert") {
    console.log("Puedes tomar casi todos los cursos de Platzi durante un a√±o");
} else if (tipoDeSuscripcion === "ExpertPlus") {
    console.log("T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o");
}
3 Replica el comportamiento de tu condicional anterior con if, else y else if, pero ahora solo con if (sin else ni else if).
if (tipoDeSuscripcion === "Free") {
    console.log("Solo puedes tomar los cursos gratis");
} 
if (tipoDeSuscripcion === "Basic") {
    console.log("Puedes tomar casi todos los cursos de Platzi durante un mes");
} 
if (tipoDeSuscripcion === "Expert") {
    console.log("Puedes tomar casi todos los cursos de Platzi durante un a√±o");
} 
if (tipoDeSuscripcion === "ExpertPlus") {
    console.log("T√∫ y alguien m√°s pueden tomar TODOS los cursos de Platzi durante un a√±o");
}
Bonus: si ya eres una experta o experto en el lenguaje, te desaf√≠o a comentar c√≥mo replicar este comportamiento con arrays y un solo condicional. üòè

# Ciclos
1 Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es un ciclo?
Es una repeticion de un bloque de codigo
¬øQu√© tipos de ciclos existen en JavaScript?
Esta el for, while, for of, for in, do while.
¬øQu√© es un ciclo infinito y por qu√© es un problema?
Es cuando se repite un bloque de codigo indefinidamente, esto es un problema pues gasta recursos como memoria, y no se puee controlar.
¬øPuedo mezclar ciclos y condicionales?
si
2 Replica el comportamiento de los siguientes ciclos for utilizando ciclos while:
let i = 0;
while(i < 5){
    console.log("El valor de i es: " + i);
    i++;
}
let i = 10
while (i >= 2) {
    console.log("El valor de i es: " + i);
    i--;
}
Escribe un c√≥digo en JavaScript que le pregunte a los usuarios cu√°nto es 2 + 2. Si responden bien, mostramos un mensaje de felicitaciones, pero si responden mal, volvemos a empezar.
let input = 0;
while (!(input === 4)) {
    input = prompt('¬øCual es el resultado de 2 + 2?');
    if (input === 4) {
        console.log("Correcto");
    } else{
        console.log("Incorrecto");
    }
}
 Responde las siguientes preguntas en la secci√≥n de comentarios:

¬øQu√© es un array?
Es una cadena de datos, donde puedes cuardar informacion
¬øQu√© es un objeto?
es un grupo de propiedades pertenecientes a una variable
¬øCu√°ndo es mejor usar objetos o arrays?
depende de la situacion
¬øPuedo mezclar arrays con objetos o incluso objetos con arrays?
si se puede 
2Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier array como par√°metro e imprima su primer elemento.

3Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier array como par√°metro e imprima todos sus elementos uno por uno (no se vale imprimir el array completo).

4Ô∏è‚É£ Crea una funci√≥n que pueda recibir cualquier objeto como par√°metro e imprima todos sus elementos uno por uno (no se vale imprimir el objeto completo).